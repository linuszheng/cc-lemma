Proving begin optimize: (main inp0) === (mainNew inp0)
Property accepted by cvec analysis
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main inp0) === (mainNew inp0)
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat inp0_150 inp0_151)) === (mainNew (Concat inp0_150 inp0_151))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Single inp0_150)) === (mainNew (Single inp0_150))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Single inp0_150_590) inp0_151)) === (mainNew (Concat (Single inp0_150_590) inp0_151))
? attempting lemma forall v0: Bool. v0 === (and True v0) v0 === (and True v0)
? attempting lemma forall v0: Tuple2. (and True (third2 v0)) === (third2 v0) (and True (third2 v0)) === (third2 v0)
? attempting lemma forall v0: Tuple3. (and True (fst3 v0)) === (fst3 v0) (and True (fst3 v0)) === (fst3 v0)
? attempting lemma forall v0: Bool. v0 === (and True v0) False === (and True False)
? attempting lemma forall v0: Bool. v0 === (and True v0) True === (and True True)
+ proved lemma forall v0: Bool. v0 === (and True v0) True === (and True True)
+ proved lemma forall v0: Tuple2. (and True (third2 v0)) === (third2 v0)
+ proved lemma forall v0: Tuple3. (and True (fst3 v0)) === (fst3 v0)
? attempting lemma forall v0: CList. (fst2 (tf5 (tf3 v0))) === (snd3 (tf7 v0)) (fst2 (tf5 (tf3 v0))) === (snd3 (tf7 v0))
? attempting lemma forall v0: CList. (snd2 (tf5 (tf3 v0))) === (third3 (tf7 v0)) (snd2 (tf5 (tf3 v0))) === (third3 (tf7 v0))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat inp0_150_590 inp0_150_591) inp0_151)) === (mainNew (Concat (Concat inp0_150_590 inp0_150_591) inp0_151))
? attempting lemma forall v0: CList. (and True (fst3 (tf7 v0))) === (third2 (tf5 (tf3 v0))) (and True (fst3 (tf7 v0))) === (third2 (tf5 (tf3 v0)))
? attempting lemma forall v0: CList. (snd2 (tf5 (tf3 v0))) === (third3 (tf7 v0)) (snd2 (tf5 (tf3 (Concat v0_70 v0_71)))) === (third3 (tf7 (Concat v0_70 v0_71)))
? attempting lemma forall v0: CList. (fst2 (tf5 (tf3 v0))) === (snd3 (tf7 v0)) (fst2 (tf5 (tf3 (Single v0_70)))) === (snd3 (tf7 (Single v0_70)))
? attempting lemma forall v0: CList. (fst2 (tf5 (tf3 v0))) === (snd3 (tf7 v0)) (fst2 (tf5 (tf3 (Concat v0_70 v0_71)))) === (snd3 (tf7 (Concat v0_70 v0_71)))
? attempting lemma forall v0: CList. (snd2 (tf5 (tf3 v0))) === (third3 (tf7 v0)) (snd2 (tf5 (tf3 (Single v0_70)))) === (third3 (tf7 (Single v0_70)))
? attempting lemma forall v0: CList. (snd2 (tf5 (tf3 v0))) === (third3 (tf7 v0)) (snd2 (tf5 (tf3 (Concat (Concat v0_70_500 v0_70_501) v0_71)))) === (third3 (tf7 (Concat (Concat v0_70_500 v0_70_501) v0_71)))
? attempting lemma forall v0: Nat. v1: CList. (lq v0 (fst2 (tf5 (tf3 v1)))) === (lq v0 (snd3 (tf7 v1))) (lq v0 (fst2 (tf5 (tf3 v1)))) === (lq v0 (snd3 (tf7 v1)))
? attempting lemma forall v0: Nat. v1: CList. (lq v0 (fst2 (tf5 (tf3 v1)))) === (lq v0 (snd3 (tf7 v1))) (lq Zero (fst2 (tf5 (tf3 v1)))) === (lq Zero (snd3 (tf7 v1)))
? attempting lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1))))
? attempting lemma forall v0: SList. v1: CList. (fst2 (tf5 v0)) === (fst2 (tf5 (tf1 (tf3 v1) v0))) (fst2 (tf5 v0)) === (fst2 (tf5 (tf1 (tf3 v1) v0)))
? attempting lemma forall v0: CList. (and True (fst3 (tf7 v0))) === (third2 (tf5 (tf3 v0))) (and True (fst3 (tf7 (Single v0_110)))) === (third2 (tf5 (tf3 (Single v0_110))))
? attempting lemma forall v0: CList. (and True (fst3 (tf7 v0))) === (third2 (tf5 (tf3 v0))) (and True (fst3 (tf7 (Concat v0_110 v0_111)))) === (third2 (tf5 (tf3 (Concat v0_110 v0_111))))
? attempting lemma forall v0: SList. v1: CList. (fst2 (tf5 v0)) === (fst2 (tf5 (tf1 (tf3 v1) v0))) (fst2 (tf5 (Elt v0_90))) === (fst2 (tf5 (tf1 (tf3 v1) (Elt v0_90))))
? attempting lemma forall v0: SList. v1: CList. (fst2 (tf5 v0)) === (fst2 (tf5 (tf1 (tf3 v1) v0))) (fst2 (tf5 (Cons v0_90 v0_91))) === (fst2 (tf5 (tf1 (tf3 v1) (Cons v0_90 v0_91))))
+ proved lemma forall v0: SList. v1: CList. (fst2 (tf5 v0)) === (fst2 (tf5 (tf1 (tf3 v1) v0))) (fst2 (tf5 (Cons v0_90 v0_91))) === (fst2 (tf5 (tf1 (tf3 v1) (Cons v0_90 v0_91))))
+ proved lemma forall v0: CList. (fst2 (tf5 (tf3 v0))) === (snd3 (tf7 v0))
+ proved lemma forall v0: Nat. v1: CList. (lq v0 (fst2 (tf5 (tf3 v1)))) === (lq v0 (snd3 (tf7 v1)))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat inp0_150_590 inp0_150_591) (Single inp0_151_1820))) === (mainNew (Concat (Concat inp0_150_590 inp0_150_591) (Single inp0_151_1820)))
? attempting lemma forall v0: SList. v1: CList. (and (third2 (tf5 v0)) (fst3 (tf7 v1))) === (third2 (tf5 (tf1 (tf3 v1) v0))) (and (third2 (tf5 v0)) (fst3 (tf7 v1))) === (third2 (tf5 (tf1 (tf3 v1) v0)))
? attempting lemma forall v0: CList. v1: SList. (and (fst3 (tf7 v0)) (third2 (tf5 v1))) === (third2 (tf5 (tf1 v1 (tf3 v0)))) (and (fst3 (tf7 v0)) (third2 (tf5 v1))) === (third2 (tf5 (tf1 v1 (tf3 v0))))
? attempting lemma forall v0: CList. v1: SList. (and (third2 (tf5 (tf3 v0))) (third2 (tf5 v1))) === (third2 (tf5 (tf1 v1 (tf3 v0)))) (and (third2 (tf5 (tf3 v0))) (third2 (tf5 v1))) === (third2 (tf5 (tf1 v1 (tf3 v0))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (third2 (tf5 (tf1 v0 (tf3 v1)))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 (tf3 v1))))) (third2 (tf5 (tf1 v0 (tf3 v1)))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 (tf3 v1)))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (third2 (tf5 (tf1 v0 v1))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 v1)))) (third2 (tf5 (tf1 v0 v1))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 v1))))
? attempting lemma forall v0: CList. v1: SList. v2: CList. (third2 (tf5 (tf1 (tf3 v0) v1))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 (tf3 v0) v1)))) (third2 (tf5 (tf1 (tf3 v0) v1))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 (tf3 v0) v1))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (and (third2 (tf5 (tf1 v0 (tf3 v1)))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 (tf3 v2) v0))) (and (third2 (tf5 (tf1 v0 (tf3 v1)))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 (tf3 v2) v0)))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat inp0_150_590 inp0_150_591) (Concat inp0_151_1820 inp0_151_1821))) === (mainNew (Concat (Concat inp0_150_590 inp0_150_591) (Concat inp0_151_1820 inp0_151_1821)))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (third2 (tf5 (tf1 v0 (tf1 (tf3 v1) (tf3 v2))))) === (third2 (tf5 (tf1 v0 (tf3 v1)))) (third2 (tf5 (tf1 v0 (tf1 (tf3 v1) (tf3 v2))))) === (third2 (tf5 (tf1 v0 (tf3 v1))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (and (third2 (tf5 (tf1 v0 v1))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 v0 v1))) (and (third2 (tf5 (tf1 v0 v1))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 v0 v1)))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (and (third2 (tf5 (tf1 v0 (tf3 v1)))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 v0 (tf3 v1)))) (and (third2 (tf5 (tf1 v0 (tf3 v1)))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 v0 (tf3 v1))))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat (Single inp0_150_590_2130) inp0_150_591) (Single inp0_151_1820))) === (mainNew (Concat (Concat (Single inp0_150_590_2130) inp0_150_591) (Single inp0_151_1820)))
? attempting lemma forall v0: CList. v1: CList. (and (third2 (tf5 (tf3 v0))) (third2 (tf5 (tf3 v1)))) === (third2 (tf5 (tf1 (tf3 v1) (tf3 v0)))) (and (third2 (tf5 (tf3 v0))) (third2 (tf5 (tf3 v1)))) === (third2 (tf5 (tf1 (tf3 v1) (tf3 v0))))
? attempting lemma forall v0: CList. v1: SList. (and (third2 (tf5 (tf3 v0))) (third2 (tf5 v1))) === (third2 (tf5 (tf1 v1 (tf3 v0)))) (and (third2 (tf5 (tf3 (Single v0_180)))) (third2 (tf5 v1))) === (third2 (tf5 (tf1 v1 (tf3 (Single v0_180)))))
? attempting lemma forall v0: CList. v1: SList. v2: CList. (and (third2 (tf5 (tf1 (tf3 v0) v1))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 (tf3 v0) v1))) (and (third2 (tf5 (tf1 (tf3 v0) v1))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 (tf3 v0) v1)))
? attempting lemma forall v0: CList. v1: CList. v2: SList. (and (third2 (tf5 (tf1 (tf3 v0) (tf3 v1)))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 v2 (tf3 v0)))) (and (third2 (tf5 (tf1 (tf3 v0) (tf3 v1)))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 v2 (tf3 v0))))
? attempting lemma forall v0: SList. v1: CList. v2: SList. (and (third2 (tf5 (tf1 v0 (tf3 v1)))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 v0 (tf3 v1)))) (and (third2 (tf5 (tf1 v0 (tf3 v1)))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 v0 (tf3 v1))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (third2 (tf5 (tf1 v0 (tf3 v1)))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 (tf3 v1))))) (third2 (tf5 (tf1 v0 (tf3 (Single v1_160))))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 (tf3 (Single v1_160))))))
? attempting lemma forall v0: SList. v1: SList. v2: SList. (and (third2 (tf5 (tf1 v0 v1))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 v0 v1))) (and (third2 (tf5 (tf1 v0 v1))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 v0 v1)))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (and (third2 (tf5 (tf1 v0 (tf3 v1)))) (fst3 (tf7 v2))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 (tf3 v1))))) (and (third2 (tf5 (tf1 v0 (tf3 v1)))) (fst3 (tf7 v2))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 (tf3 v1)))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (and (third2 (tf5 (tf1 v0 v1))) (fst3 (tf7 v2))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 v1)))) (and (third2 (tf5 (tf1 v0 v1))) (fst3 (tf7 v2))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 v1))))
? attempting lemma forall v0: CList. v1: SList. v2: CList. (third2 (tf5 (tf1 (tf3 v0) v1))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 (tf3 v0) v1)))) (third2 (tf5 (tf1 (tf3 (Single v0_160)) v1))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 (tf3 (Single v0_160)) v1))))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat (Single inp0_150_590_4040) inp0_150_591) (Concat inp0_151_1820 inp0_151_1821))) === (mainNew (Concat (Concat (Single inp0_150_590_4040) inp0_150_591) (Concat inp0_151_1820 inp0_151_1821)))
? attempting lemma forall v0: CList. (snd2 (tf5 (tf3 v0))) === (third3 (tf7 v0)) (snd2 (tf5 (tf3 (Concat (Single v0_70_500) v0_71)))) === (third3 (tf7 (Concat (Single v0_70_500) v0_71)))
? attempting lemma forall v0: CList. (snd2 (tf5 (tf3 v0))) === (third3 (tf7 v0)) (snd2 (tf5 (tf3 (Concat (Concat v0_70_500 v0_70_501) (Single v0_71_1260))))) === (third3 (tf7 (Concat (Concat v0_70_500 v0_70_501) (Single v0_71_1260))))
? attempting lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (Elt v0_90))) === (snd2 (tf5 (tf1 (Elt v0_90) (tf3 v1))))
? attempting lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (Cons v0_90 v0_91))) === (snd2 (tf5 (tf1 (Cons v0_90 v0_91) (tf3 v1))))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (tf5 (tf1 v0 v1)) === (tf5 (tf1 (Cons v2 v0) v1)) (tf5 (tf1 v0 v1)) === (tf5 (tf1 (Cons v2 v0) v1))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 (Cons v2 v0) v1))) (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 (Cons v2 v0) v1)))
? attempting lemma forall v0: SList. v1: CList. v2: Nat. (tf5 (tf1 v0 (tf3 v1))) === (tf5 (tf1 (Cons v2 v0) (tf3 v1))) (tf5 (tf1 v0 (tf3 v1))) === (tf5 (tf1 (Cons v2 v0) (tf3 v1)))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (tf5 (tf1 v0 v1)) === (tf5 (tf1 (Cons v2 v0) v1)) (tf5 (tf1 v0 (Elt v1_90))) === (tf5 (tf1 (Cons v2 v0) (Elt v1_90)))
? attempting lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (Elt v0_90))) === (snd2 (tf5 (tf1 (Elt v0_90) (tf3 (Single v1_160)))))
? attempting lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (Cons v0_90 v0_91))) === (snd2 (tf5 (tf1 (Cons v0_90 v0_91) (tf3 (Single v1_330)))))
? attempting lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (Cons v0_90 v0_91))) === (snd2 (tf5 (tf1 (Cons v0_90 v0_91) (tf3 (Concat v1_330 v1_331)))))
? attempting lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (Elt v0_90))) === (snd2 (tf5 (tf1 (Elt v0_90) (tf3 (Concat v1_160 v1_161)))))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (tf5 (tf1 v0 v1)) === (tf5 (tf1 (Cons v2 v0) v1)) (tf5 (tf1 v0 (Cons v1_90 v1_91))) === (tf5 (tf1 (Cons v2 v0) (Cons v1_90 v1_91)))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (tf5 (tf1 v0 v1)) === (tf5 (tf1 (Cons v2 v0) v1)) (tf5 (tf1 (Cons v0_470 v0_471) (Elt v1_90))) === (tf5 (tf1 (Cons v2 (Cons v0_470 v0_471)) (Elt v1_90)))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 (Cons v2 v0) v1))) (snd2 (tf5 (tf1 v0 (Elt v1_130)))) === (snd2 (tf5 (tf1 (Cons v2 v0) (Elt v1_130))))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 (Cons v2 v0) v1))) (snd2 (tf5 (tf1 v0 (Cons v1_130 v1_131)))) === (snd2 (tf5 (tf1 (Cons v2 v0) (Cons v1_130 v1_131))))
+ proved lemma forall v0: SList. v1: SList. v2: Nat. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 (Cons v2 v0) v1))) (snd2 (tf5 (tf1 v0 (Cons v1_130 v1_131)))) === (snd2 (tf5 (tf1 (Cons v2 v0) (Cons v1_130 v1_131))))
? attempting lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (Elt v0_90))) === (snd2 (tf5 (tf1 (Elt v0_90) (tf3 (Concat (Concat v1_160_400 v1_160_401) v1_161)))))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat (Concat inp0_150_590_2130 inp0_150_590_2131) inp0_150_591) (Single inp0_151_1820))) === (mainNew (Concat (Concat (Concat inp0_150_590_2130 inp0_150_590_2131) inp0_150_591) (Single inp0_151_1820)))
? attempting lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (Elt v0_90))) === (snd2 (tf5 (tf1 (Elt v0_90) (tf3 (Concat (Single v1_160_400) v1_161)))))
? attempting lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (Elt v0_90))) === (snd2 (tf5 (tf1 (Elt v0_90) (tf3 (Concat (Concat v1_160_400 v1_160_401) (Single v1_161_790))))))
? attempting lemma forall v0: Nat. v1: SList. v2: CList. (snd2 (tf5 (tf1 (Elt v0) v1))) === (snd2 (tf5 (tf1 (Elt v0) (tf1 (tf3 v2) v1)))) (snd2 (tf5 (tf1 (Elt v0) v1))) === (snd2 (tf5 (tf1 (Elt v0) (tf1 (tf3 v2) v1))))
? attempting lemma forall v0: Nat. v1: SList. v0 === (snd2 (tf5 (tf1 (Elt v0) v1))) v0 === (snd2 (tf5 (tf1 (Elt v0) v1)))
? attempting lemma forall v0: Nat. v1: SList. v0 === (snd2 (tf5 (tf1 (Elt v0) v1))) v0 === (snd2 (tf5 (tf1 (Elt v0) (Elt v1_110))))
? attempting lemma forall v0: Nat. v1: SList. v0 === (snd2 (tf5 (tf1 (Elt v0) v1))) v0 === (snd2 (tf5 (tf1 (Elt v0) (Cons v1_110 v1_111))))
+ proved lemma forall v0: Nat. v1: SList. v0 === (snd2 (tf5 (tf1 (Elt v0) v1))) v0 === (snd2 (tf5 (tf1 (Elt v0) (Cons v1_110 v1_111))))
? attempting lemma forall v0: CList. v1: SList. (and (third2 (tf5 (tf3 v0))) (third2 (tf5 v1))) === (third2 (tf5 (tf1 v1 (tf3 v0)))) (and (third2 (tf5 (tf3 (Concat v0_180 v0_181)))) (third2 (tf5 v1))) === (third2 (tf5 (tf1 v1 (tf3 (Concat v0_180 v0_181)))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (snd2 (tf5 (tf1 v0 (tf1 (tf3 v1) (tf3 v2))))) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (tf1 v0 (tf1 (tf3 v1) (tf3 v2))))) === (snd2 (tf5 (tf1 v0 (tf3 v1))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 v1 (tf3 v2))))) (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 v1 (tf3 v2)))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (third2 (tf5 (tf1 v0 (tf1 (tf3 v1) (tf3 v2))))) === (third2 (tf5 (tf1 (tf3 v1) (tf3 v2)))) (third2 (tf5 (tf1 v0 (tf1 (tf3 v1) (tf3 v2))))) === (third2 (tf5 (tf1 (tf3 v1) (tf3 v2))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (snd2 (tf5 (tf1 v0 (tf1 (tf3 v1) (tf3 v2))))) === (snd2 (tf5 (tf1 v0 (tf3 v2)))) (snd2 (tf5 (tf1 v0 (tf1 (tf3 v1) (tf3 v2))))) === (snd2 (tf5 (tf1 v0 (tf3 v2))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 (tf3 v2) v1)))) (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 (tf3 v2) v1))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (tf5 (tf1 v0 v1)) === (tf5 (tf1 v0 (tf1 (tf3 v2) v1))) (tf5 (tf1 v0 v1)) === (tf5 (tf1 v0 (tf1 (tf3 v2) v1)))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (tf5 (tf1 v0 v1)) === (tf5 (tf1 v0 (tf1 (tf3 v2) v1))) (tf5 (tf1 v0 (Cons v1_100 v1_101))) === (tf5 (tf1 v0 (tf1 (tf3 v2) (Cons v1_100 v1_101))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (tf5 (tf1 v0 v1)) === (tf5 (tf1 v0 (tf1 (tf3 v2) v1))) (tf5 (tf1 v0 (Elt v1_100))) === (tf5 (tf1 v0 (tf1 (tf3 v2) (Elt v1_100))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 (tf3 v2) v1)))) (snd2 (tf5 (tf1 v0 (Elt v1_140)))) === (snd2 (tf5 (tf1 v0 (tf1 (tf3 v2) (Elt v1_140)))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 v1 (tf3 v2))))) (snd2 (tf5 (tf1 v0 (Elt v1_120)))) === (snd2 (tf5 (tf1 v0 (tf1 (Elt v1_120) (tf3 v2)))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (tf5 (tf1 v0 v1)) === (tf5 (tf1 v0 (tf1 (tf3 v2) v1))) (tf5 (tf1 (Elt v0_450) (Elt v1_100))) === (tf5 (tf1 (Elt v0_450) (tf1 (tf3 v2) (Elt v1_100))))
? attempting lemma forall v0: CList. v1: CList. v2: SList. (and (third2 (tf5 (tf1 (tf3 v0) (tf3 v1)))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 (tf3 v0) (tf3 v1)))) (and (third2 (tf5 (tf1 (tf3 v0) (tf3 v1)))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 (tf3 v0) (tf3 v1))))
? attempting lemma forall v0: CList. v1: SList. v2: CList. (third2 (tf5 (tf1 (tf3 v0) v1))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 (tf3 v0) v1)))) (third2 (tf5 (tf1 (tf3 (Concat v0_160 v0_161)) v1))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 (tf3 (Concat v0_160 v0_161)) v1))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (and (third2 (tf5 (tf1 v0 v1))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 v0 v1))) (and (third2 (tf5 (tf1 v0 (Elt v1_160)))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 v0 (Elt v1_160))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (snd2 (tf5 (tf1 v0 (tf1 (tf3 v1) (tf3 v2))))) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (tf1 v0 (tf1 (tf3 (Single v1_130)) (tf3 v2))))) === (snd2 (tf5 (tf1 v0 (tf3 (Single v1_130)))))
? attempting lemma forall v0: Bool. v1: CList. v2: CList. (and v0 (third2 (tf5 (tf3 v1)))) === (and (and v0 (fst3 (tf7 v1))) (lq (third3 (tf7 v2)) (snd3 (tf7 v1)))) (and v0 (third2 (tf5 (tf3 v1)))) === (and (and v0 (fst3 (tf7 v1))) (lq (third3 (tf7 v2)) (snd3 (tf7 v1))))
? attempting lemma forall v0: Bool. v1: CList. (and v0 (fst3 (tf7 v1))) === (and v0 (third2 (tf5 (tf3 v1)))) (and v0 (fst3 (tf7 v1))) === (and v0 (third2 (tf5 (tf3 v1))))
? attempting lemma forall v0: Bool. v1: CList. (and v0 (fst3 (tf7 v1))) === (and v0 (third2 (tf5 (tf3 v1)))) (and False (fst3 (tf7 v1))) === (and False (third2 (tf5 (tf3 v1))))
? attempting lemma forall v0: Bool. v1: CList. (and v0 (fst3 (tf7 v1))) === (and v0 (third2 (tf5 (tf3 v1)))) (and True (fst3 (tf7 v1))) === (and True (third2 (tf5 (tf3 v1))))
? attempting lemma forall v0: Bool. v1: CList. (and v0 (fst3 (tf7 v1))) === (and v0 (third2 (tf5 (tf3 v1)))) (and True (fst3 (tf7 (Single v1_190)))) === (and True (third2 (tf5 (tf3 (Single v1_190)))))
? attempting lemma forall v0: Bool. v1: CList. (and v0 (fst3 (tf7 v1))) === (and v0 (third2 (tf5 (tf3 v1)))) (and True (fst3 (tf7 (Concat v1_190 v1_191)))) === (and True (third2 (tf5 (tf3 (Concat v1_190 v1_191)))))
? attempting lemma forall v0: CList. (and True (fst3 (tf7 v0))) === (third2 (tf5 (tf3 v0))) (and True (fst3 (tf7 (Concat (Single v0_110_560) v0_111)))) === (third2 (tf5 (tf3 (Concat (Single v0_110_560) v0_111))))
? attempting lemma forall v0: CList. (and True (fst3 (tf7 v0))) === (third2 (tf5 (tf3 v0))) (and True (fst3 (tf7 (Concat (Concat v0_110_560 v0_110_561) v0_111)))) === (third2 (tf5 (tf3 (Concat (Concat v0_110_560 v0_110_561) v0_111))))
? attempting lemma forall v0: Bool. v1: CList. (and v0 (fst3 (tf7 v1))) === (and v0 (third2 (tf5 (tf3 v1)))) (and True (fst3 (tf7 (Concat (Single v1_190_710) v1_191)))) === (and True (third2 (tf5 (tf3 (Concat (Single v1_190_710) v1_191)))))
? attempting lemma forall v0: Bool. v1: CList. (and v0 (fst3 (tf7 v1))) === (and v0 (third2 (tf5 (tf3 v1)))) (and True (fst3 (tf7 (Concat (Concat v1_190_710 v1_190_711) v1_191)))) === (and True (third2 (tf5 (tf3 (Concat (Concat v1_190_710 v1_190_711) v1_191)))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (snd2 (tf5 (tf1 v0 (tf1 (tf3 v1) (tf3 v2))))) === (snd2 (tf5 (tf1 v0 (tf3 v2)))) (snd2 (tf5 (tf1 v0 (tf1 (tf3 (Concat v1_130 v1_131)) (tf3 v2))))) === (snd2 (tf5 (tf1 v0 (tf3 v2))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (snd2 (tf5 (tf1 v0 (tf1 (tf3 v1) (tf3 v2))))) === (snd2 (tf5 (tf1 v0 (tf3 v2)))) (snd2 (tf5 (tf1 v0 (tf1 (tf3 (Single v1_130)) (tf3 v2))))) === (snd2 (tf5 (tf1 v0 (tf3 v2))))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 (Elt v2) v1)))) (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 (Elt v2) v1))))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (tf5 (tf1 v0 v1)) === (tf5 (tf1 v0 (tf1 (Elt v2) v1))) (tf5 (tf1 v0 v1)) === (tf5 (tf1 v0 (tf1 (Elt v2) v1)))
? attempting lemma forall v0: SList. v1: Nat. v2: CList. (tf5 (tf1 v0 (tf1 (Elt v1) (tf3 v2)))) === (tf5 (tf1 v0 (tf3 v2))) (tf5 (tf1 v0 (tf1 (Elt v1) (tf3 v2)))) === (tf5 (tf1 v0 (tf3 v2)))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (tf5 (tf1 v0 v1)) === (tf5 (tf1 v0 (tf1 (Elt v2) v1))) (tf5 (tf1 v0 (Elt v1_100))) === (tf5 (tf1 v0 (tf1 (Elt v2) (Elt v1_100))))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 (Elt v2) v1)))) (snd2 (tf5 (tf1 v0 (Elt v1_140)))) === (snd2 (tf5 (tf1 v0 (tf1 (Elt v2) (Elt v1_140)))))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 (Elt v2) v1)))) (snd2 (tf5 (tf1 v0 (Cons v1_140 v1_141)))) === (snd2 (tf5 (tf1 v0 (tf1 (Elt v2) (Cons v1_140 v1_141)))))
+ proved lemma forall v0: SList. v1: SList. v2: Nat. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 (Elt v2) v1)))) (snd2 (tf5 (tf1 v0 (Cons v1_140 v1_141)))) === (snd2 (tf5 (tf1 v0 (tf1 (Elt v2) (Cons v1_140 v1_141)))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (snd2 (tf5 (tf1 v0 (tf1 (tf3 v1) (tf3 v2))))) === (snd2 (tf5 (tf1 v0 (tf3 v2)))) (snd2 (tf5 (tf1 v0 (tf1 (tf3 (Concat v1_130 v1_131)) (tf3 (Concat v2_420 v2_421)))))) === (snd2 (tf5 (tf1 v0 (tf3 (Concat v2_420 v2_421)))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (and (third2 (tf5 v0)) (third2 (tf5 (tf3 v1)))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 (tf3 v1) v0)))) (and (third2 (tf5 v0)) (third2 (tf5 (tf3 v1)))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 (tf3 v1) v0))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (and (third2 (tf5 v0)) (third2 (tf5 v1))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v1 v0)))) (and (third2 (tf5 v0)) (third2 (tf5 v1))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v1 v0))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (third2 (tf5 (tf1 v0 (tf3 v1)))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 (tf3 v1))))) (third2 (tf5 (tf1 v0 (tf3 (Concat v1_160 v1_161))))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 (tf3 (Concat v1_160 v1_161))))))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat (Concat inp0_150_590_4040 inp0_150_590_4041) inp0_150_591) (Concat inp0_151_1820 inp0_151_1821))) === (mainNew (Concat (Concat (Concat inp0_150_590_4040 inp0_150_590_4041) inp0_150_591) (Concat inp0_151_1820 inp0_151_1821)))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 (tf3 v2) v1)))) (snd2 (tf5 (tf1 v0 (Cons v1_140 v1_141)))) === (snd2 (tf5 (tf1 v0 (tf1 (tf3 v2) (Cons v1_140 v1_141)))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 (tf3 v2) v1)))) (snd2 (tf5 (tf1 (Cons v0_480 v0_481) (Elt v1_140)))) === (snd2 (tf5 (tf1 (Cons v0_480 v0_481) (tf1 (tf3 v2) (Elt v1_140)))))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (fst2 (tf5 (tf1 v0 v1))) === (fst2 (tf5 (tf1 (Cons v2 v0) v1))) (fst2 (tf5 (tf1 v0 v1))) === (fst2 (tf5 (tf1 (Cons v2 v0) v1)))
? attempting lemma forall v0: SList. v1: CList. v2: Nat. (fst2 (tf5 (tf1 v0 (tf3 v1)))) === (fst2 (tf5 (tf1 (Cons v2 v0) (tf3 v1)))) (fst2 (tf5 (tf1 v0 (tf3 v1)))) === (fst2 (tf5 (tf1 (Cons v2 v0) (tf3 v1))))
? attempting lemma forall v0: Nat. v1: SList. v2: SList. v3: Nat. (lq v0 (fst2 (tf5 (tf1 v1 v2)))) === (lq v0 (fst2 (tf5 (tf1 (Cons v3 v1) v2)))) (lq v0 (fst2 (tf5 (tf1 v1 v2)))) === (lq v0 (fst2 (tf5 (tf1 (Cons v3 v1) v2))))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (fst2 (tf5 (tf1 v0 v1))) === (fst2 (tf5 (tf1 (Cons v2 v0) v1))) (fst2 (tf5 (tf1 v0 (Elt v1_110)))) === (fst2 (tf5 (tf1 (Cons v2 v0) (Elt v1_110))))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (fst2 (tf5 (tf1 v0 v1))) === (fst2 (tf5 (tf1 (Cons v2 v0) v1))) (fst2 (tf5 (tf1 v0 (Cons v1_110 v1_111)))) === (fst2 (tf5 (tf1 (Cons v2 v0) (Cons v1_110 v1_111))))
+ proved lemma forall v0: SList. v1: SList. v2: Nat. (fst2 (tf5 (tf1 v0 v1))) === (fst2 (tf5 (tf1 (Cons v2 v0) v1))) (fst2 (tf5 (tf1 v0 (Cons v1_110 v1_111)))) === (fst2 (tf5 (tf1 (Cons v2 v0) (Cons v1_110 v1_111))))
+ proved lemma forall v0: Nat. v1: SList. v2: SList. v3: Nat. (lq v0 (fst2 (tf5 (tf1 v1 v2)))) === (lq v0 (fst2 (tf5 (tf1 (Cons v3 v1) v2))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (snd2 (tf5 (tf1 v0 v1))) === (snd2 (tf5 (tf1 v0 (tf1 v1 (tf3 v2))))) (snd2 (tf5 (tf1 v0 (Cons v1_120 v1_121)))) === (snd2 (tf5 (tf1 v0 (tf1 (Cons v1_120 v1_121) (tf3 v2)))))
? attempting lemma forall v0: SList. v1: SList. v2: SList. v3: Nat. (tf5 (tf1 v0 (tf1 v1 v2))) === (tf5 (tf1 v0 (tf1 (Cons v3 v1) v2))) (tf5 (tf1 v0 (tf1 v1 v2))) === (tf5 (tf1 v0 (tf1 (Cons v3 v1) v2)))
? attempting lemma forall v0: SList. v1: SList. v2: SList. v3: Nat. (snd2 (tf5 (tf1 v0 (tf1 v1 v2)))) === (snd2 (tf5 (tf1 v0 (tf1 (Cons v3 v1) v2)))) (snd2 (tf5 (tf1 v0 (tf1 v1 v2)))) === (snd2 (tf5 (tf1 v0 (tf1 (Cons v3 v1) v2))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. v3: Nat. (tf5 (tf1 v0 (tf1 v1 (tf3 v2)))) === (tf5 (tf1 v0 (tf1 (Cons v3 v1) (tf3 v2)))) (tf5 (tf1 v0 (tf1 v1 (tf3 v2)))) === (tf5 (tf1 v0 (tf1 (Cons v3 v1) (tf3 v2))))
? attempting lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (Elt v0_90))) === (snd2 (tf5 (tf1 (Elt v0_90) (tf3 (Concat (Concat v1_160_400 v1_160_401) (Concat v1_161_790 v1_161_791))))))
? attempting lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (Elt Zero))) === (snd2 (tf5 (tf1 (Elt Zero) (tf3 (Concat (Concat v1_160_400 v1_160_401) (Single v1_161_790))))))
? attempting lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (Elt (Succ v0_90_960)))) === (snd2 (tf5 (tf1 (Elt (Succ v0_90_960)) (tf3 (Concat (Concat v1_160_400 v1_160_401) (Single v1_161_790))))))
+ proved lemma forall v0: SList. v1: CList. (snd2 (tf5 v0)) === (snd2 (tf5 (tf1 v0 (tf3 v1)))) (snd2 (tf5 (Elt (Succ v0_90_960)))) === (snd2 (tf5 (tf1 (Elt (Succ v0_90_960)) (tf3 (Concat (Concat v1_160_400 v1_160_401) (Single v1_161_790))))))
+ proved lemma forall v0: CList. (snd2 (tf5 (tf3 v0))) === (third3 (tf7 v0))
? attempting lemma forall v0: CList. v1: SList. v2: CList. (and (third2 (tf5 (tf3 v0))) (third2 (tf5 v1))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v1 (tf3 v0))))) (and (third2 (tf5 (tf3 v0))) (third2 (tf5 v1))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v1 (tf3 v0)))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (and (third2 (tf5 v0)) (fst3 (tf7 v1))) === (and (third2 (tf5 (tf1 v0 (tf3 v2)))) (third2 (tf5 (tf3 v1)))) (and (third2 (tf5 v0)) (fst3 (tf7 v1))) === (and (third2 (tf5 (tf1 v0 (tf3 v2)))) (third2 (tf5 (tf3 v1))))
? attempting lemma forall v0: SList. v1: CList. v2: SList. (and (third2 (tf5 (tf1 v0 (tf3 v1)))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 v2 (tf1 v0 (tf3 v1))))) (and (third2 (tf5 (tf1 v0 (tf3 v1)))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 v2 (tf1 v0 (tf3 v1)))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (and (third2 (tf5 (tf1 v0 (tf3 v1)))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 (tf3 v1))))) (and (third2 (tf5 (tf1 v0 (tf3 v1)))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 (tf3 v1)))))
? attempting lemma forall v0: CList. v1: SList. v2: CList. (and (and (fst3 (tf7 v0)) (third2 (tf5 v1))) (lq (third3 (tf7 v0)) (snd3 (tf7 v2)))) === (third2 (tf5 (tf1 v1 (tf3 v0)))) (and (and (fst3 (tf7 v0)) (third2 (tf5 v1))) (lq (third3 (tf7 v0)) (snd3 (tf7 v2)))) === (third2 (tf5 (tf1 v1 (tf3 v0))))
? attempting lemma forall v0: CList. v1: SList. v2: CList. (and (third2 (tf5 (tf1 (tf3 v0) v1))) (fst3 (tf7 v2))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 (tf3 v0) v1)))) (and (third2 (tf5 (tf1 (tf3 v0) v1))) (fst3 (tf7 v2))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 (tf3 v0) v1))))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (and (third2 (tf5 (tf1 v0 v1))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 v1)))) (and (third2 (tf5 (tf1 v0 v1))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 v1))))
? attempting lemma forall v0: CList. v1: SList. v2: SList. (and (third2 (tf5 (tf1 (tf3 v0) v1))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 v2 (tf1 (tf3 v0) v1)))) (and (third2 (tf5 (tf1 (tf3 v0) v1))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 v2 (tf1 (tf3 v0) v1))))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat (Single inp0_150_590_2130) (Single inp0_150_591_2440)) (Single inp0_151_1820))) === (mainNew (Concat (Concat (Single inp0_150_590_2130) (Single inp0_150_591_2440)) (Single inp0_151_1820)))
? attempting lemma forall v0: CList. v1: SList. v2: CList. (and (third2 (tf5 (tf1 (tf3 v0) v1))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 (tf3 v2) v1))) (and (third2 (tf5 (tf1 (tf3 v0) v1))) (third2 (tf5 (tf3 v2)))) === (third2 (tf5 (tf1 (tf3 v2) v1)))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (and (third2 (tf5 v0)) (third2 (tf5 (tf3 v1)))) === (and (third2 (tf5 (tf1 v0 (tf3 v2)))) (fst3 (tf7 v1))) (and (third2 (tf5 v0)) (third2 (tf5 (tf3 v1)))) === (and (third2 (tf5 (tf1 v0 (tf3 v2)))) (fst3 (tf7 v1)))
? attempting lemma forall v0: CList. v1: CList. (and (third2 (tf5 (tf3 v0))) (third2 (tf5 (tf3 v1)))) === (third2 (tf5 (tf1 (tf3 v1) (tf3 v0)))) (and (third2 (tf5 (tf3 (Single v0_190)))) (third2 (tf5 (tf3 v1)))) === (third2 (tf5 (tf1 (tf3 v1) (tf3 (Single v0_190)))))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat (Single inp0_150_590_2130) (Single inp0_150_591_2440)) (Single Zero))) === (mainNew (Concat (Concat (Single inp0_150_590_2130) (Single inp0_150_591_2440)) (Single Zero)))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat (Concat inp0_150_590_2130 inp0_150_590_2131) (Single inp0_150_591_4320)) (Single inp0_151_1820))) === (mainNew (Concat (Concat (Concat inp0_150_590_2130 inp0_150_590_2131) (Single inp0_150_591_4320)) (Single inp0_151_1820)))
? attempting lemma forall v0: Bool. v1: CList. v2: CList. (and v0 (third2 (tf5 (tf3 v1)))) === (and (and v0 (fst3 (tf7 v1))) (lq (third3 (tf7 v2)) (snd3 (tf7 v1)))) (and False (third2 (tf5 (tf3 v1)))) === (and (and False (fst3 (tf7 v1))) (lq (third3 (tf7 v2)) (snd3 (tf7 v1))))
? attempting lemma forall v0: Bool. v1: CList. v2: CList. (and v0 (third2 (tf5 (tf3 v1)))) === (and (and v0 (fst3 (tf7 v1))) (lq (third3 (tf7 v2)) (snd3 (tf7 v1)))) (and True (third2 (tf5 (tf3 v1)))) === (and (and True (fst3 (tf7 v1))) (lq (third3 (tf7 v2)) (snd3 (tf7 v1))))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (and (and (third2 (tf5 v0)) (fst3 (tf7 v1))) (lq (third3 (tf7 v2)) (snd3 (tf7 v1)))) === (third2 (tf5 (tf1 (tf3 v1) v0))) (and (and (third2 (tf5 v0)) (fst3 (tf7 v1))) (lq (third3 (tf7 v2)) (snd3 (tf7 v1)))) === (third2 (tf5 (tf1 (tf3 v1) v0)))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (and (third2 (tf5 (tf1 v0 v1))) (fst3 (tf7 v2))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 v1)))) (and (third2 (tf5 (tf1 v0 (Elt v1_220)))) (fst3 (tf7 v2))) === (third2 (tf5 (tf1 (tf3 v2) (tf1 v0 (Elt v1_220)))))
? attempting lemma forall v0: SList. v1: SList. v2: Nat. (and (third2 (tf5 (tf1 v0 v1))) (lq v2 (fst2 (tf5 (tf1 v0 v1))))) === (third2 (tf5 (tf1 v0 v1))) (and (third2 (tf5 (tf1 v0 v1))) (lq v2 (fst2 (tf5 (tf1 v0 v1))))) === (third2 (tf5 (tf1 v0 v1)))
? attempting lemma forall v0: CList. v1: SList. v2: Nat. (and (third2 (tf5 (tf1 (tf3 v0) v1))) (lq v2 (fst2 (tf5 v1)))) === (third2 (tf5 (tf1 (tf3 v0) v1))) (and (third2 (tf5 (tf1 (tf3 v0) v1))) (lq v2 (fst2 (tf5 v1)))) === (third2 (tf5 (tf1 (tf3 v0) v1)))
? attempting lemma forall v0: SList. v1: CList. v2: CList. v3: SList. (and (and (third2 (tf5 v0)) (fst3 (tf7 v1))) (lq (third3 (tf7 v2)) (fst2 (tf5 v3)))) === (third2 (tf5 (tf1 v3 v0))) (and (and (third2 (tf5 v0)) (fst3 (tf7 v1))) (lq (third3 (tf7 v2)) (fst2 (tf5 v3)))) === (third2 (tf5 (tf1 v3 v0)))
? attempting lemma forall v0: CList. v1: SList. v2: SList. (and (and (third2 (tf5 (tf3 v0))) (third2 (tf5 v1))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 v1 (tf3 v0)))) (and (and (third2 (tf5 (tf3 v0))) (third2 (tf5 v1))) (third2 (tf5 v2))) === (third2 (tf5 (tf1 v1 (tf3 v0))))
? attempting lemma forall v0: Tuple2. v1: CList. v2: SList. (and (and (third2 v0) (third2 (tf5 (tf3 v1)))) (third2 (tf5 v2))) === (and (third2 v0) (third2 (tf5 (tf3 v1)))) (and (and (third2 v0) (third2 (tf5 (tf3 v1)))) (third2 (tf5 v2))) === (and (third2 v0) (third2 (tf5 (tf3 v1))))
? attempting lemma forall v0: CList. v1: SList. (and (third2 (tf5 (tf3 v0))) (third2 (tf5 v1))) === (third2 (tf5 (tf1 v1 (tf3 v0)))) (and (third2 (tf5 (tf3 (Single v0_180)))) (third2 (tf5 (Elt v1_350)))) === (third2 (tf5 (tf1 (Elt v1_350) (tf3 (Single v0_180)))))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat (Single inp0_150_590_4040) (Single inp0_150_591_4630)) (Concat inp0_151_1820 inp0_151_1821))) === (mainNew (Concat (Concat (Single inp0_150_590_4040) (Single inp0_150_591_4630)) (Concat inp0_151_1820 inp0_151_1821)))
? attempting lemma forall v0: SList. v1: CList. v2: CList. (third2 (tf5 (tf1 v0 (tf1 (tf3 v1) (tf3 v2))))) === (third2 (tf5 (tf1 (tf3 v1) (tf3 v2)))) (third2 (tf5 (tf1 v0 (tf1 (tf3 (Single v1_160)) (tf3 v2))))) === (third2 (tf5 (tf1 (tf3 (Single v1_160)) (tf3 v2))))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat (Single inp0_150_590_2130) (Concat inp0_150_591_2440 inp0_150_591_2441)) (Single inp0_151_1820))) === (mainNew (Concat (Concat (Single inp0_150_590_2130) (Concat inp0_150_591_2440 inp0_150_591_2441)) (Single inp0_151_1820)))
? attempting lemma forall v0: CList. v1: SList. v2: CList. (and (and (third2 (tf5 (tf3 v0))) (third2 (tf5 v1))) (lq (third3 (tf7 v0)) (snd3 (tf7 v2)))) === (third2 (tf5 (tf1 v1 (tf3 v0)))) (and (and (third2 (tf5 (tf3 v0))) (third2 (tf5 v1))) (lq (third3 (tf7 v0)) (snd3 (tf7 v2)))) === (third2 (tf5 (tf1 v1 (tf3 v0))))
? attempting lemma forall v0: CList. v1: SList. (and (third2 (tf5 (tf3 v0))) (third2 (tf5 v1))) === (third2 (tf5 (tf1 v1 (tf3 v0)))) (and (third2 (tf5 (tf3 (Single Zero)))) (third2 (tf5 (Elt v1_350)))) === (third2 (tf5 (tf1 (Elt v1_350) (tf3 (Single Zero)))))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat (Concat inp0_150_590_2130 inp0_150_590_2131) (Single inp0_150_591_4320)) (Single Zero))) === (mainNew (Concat (Concat (Concat inp0_150_590_2130 inp0_150_590_2131) (Single inp0_150_591_4320)) (Single Zero)))
? attempting lemma forall v0: SList. v1: SList. v2: CList. (and (and (third2 (tf5 v0)) (third2 (tf5 v1))) (lq (snd2 (tf5 v0)) (snd3 (tf7 v2)))) === (third2 (tf5 (tf1 v1 v0))) (and (and (third2 (tf5 v0)) (third2 (tf5 v1))) (lq (snd2 (tf5 v0)) (snd3 (tf7 v2)))) === (third2 (tf5 (tf1 v1 v0)))
? attempting lemma forall inp0: CList. (main inp0) === (mainNew inp0) (main (Concat (Concat (Single inp0_150_590_2130) (Concat inp0_150_591_2440 inp0_150_591_2441)) (Single Zero))) === (mainNew (Concat (Concat (Single inp0_150_590_2130) (Concat inp0_150_591_2440 inp0_150_591_2441)) (Single Zero)))
? attempting lemma forall v0: Bool. v0 === (and v0 True) v0 === (and v0 True)
? attempting lemma forall v0: Bool. v0 === (and v0 True) False === (and False True)
? attempting lemma forall v0: Bool. v0 === (and v0 True) True === (and True True)
+ proved lemma forall v0: Bool. v0 === (and v0 True) True === (and True True)
